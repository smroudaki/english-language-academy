@model ESL.Web.Areas.Dashboard.Models.ViewModels.Model_ExamInPersonPlanCreate
@using ESL.Services.BaseRepository

@{
    ViewBag.Title = "افزودن آزمون";
    Layout = "~/Areas/Dashboard/Views/Shared/_Master.cshtml";
}

@section Styles {
    <link href="~/Content/Plugins/jQuery.MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePicker.css" rel="stylesheet" />
}

<div class="panel panel-body panel-default navigation">

    <div class="pull-left" style="margin-left: 10px;">
        <a href="@Url.Action("Index", "ExamInPerson")" data-toggle="tooltip" data-placement="auto" title="برگشت به صفحه قبل">
            <i class="glyphicon glyphicon-arrow-left navigation-btn-icon"></i>
        </a>
    </div>

    <div class="pull-left" style="margin-left: 10px;">
        <h4 class="navigation-title"><b>@ViewBag.Title</b></h4>
    </div>

</div>

<div class="panel panel-default">
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="modal-main">
                <div class="row" style="margin: 0 -30px;">

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Exam, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Exam, Rep_Exam.Get_AllExams(), new { @class = "form-control Select2_Normal" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SubExam, htmlAttributes: new { @class = "control-label" })

                            <select name="SubExam" id="SubExam" class="form-control Select2_Normal"></select>

                            @Html.ValidationMessageFor(model => model.SubExam, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })

                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label" })

                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })

                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label" })

                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                            <div id="Date" data-englishnumber="true" data-mddatetimepicker="true" data-inline="true" data-isgregorian="false" data-targetselector="#fromDate" data-enabletimepicker="true" style="border: solid 1px #ccc; background: #222d32; color: #ccc;"></div>
                            <input type="hidden" name="Date" class="form-control" id="fromDate" placeholder="تاریخ" readonly />
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TotalMark, htmlAttributes: new { @class = "control-label" })

                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PassMark, htmlAttributes: new { @class = "control-label" })

                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.PassMark, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.PassMark, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group material-switch-body">
                            <label class="pull-left">وضعیت نمایش</label>
                            <div class="material-switch pull-right">
                                @Html.CheckBoxFor(model => model.Activeness, htmlAttributes: new { @class = "" })
                                @Html.LabelFor(model => model.Activeness, htmlAttributes: new { @class = "text-hide", @style = "background-color: #5cb85c;" })
                            </div>
                        </div>

                    </div>

                </div>
            </div>

            <div style="margin-top:20px;">
                <a href="@Url.Action("Index", "ExamInPerson")" class="btn btn-danger modal-btn-Dual pull-left">انصراف</a>
                <button class="btn btn-success modal-btn-Dual pull-right" type="submit" name="btn-Delete">تایید</button>
            </div>
        }

    </div>
</div>

@section Scripts {

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script src="~/Scripts/Plugins/jQuery.Select2/select2.js"></script>
    <script src="~/Scripts/Plugins/jQuery.Select2/i18n/fa.js"></script>

    <script src="~/Scripts/MyScripts/Select2_Config.js"></script>

    <script>

        $("#Exam").on("change", function () {
            var ExamID = document.getElementById("Exam").value;

            $.ajax({
                url: "/ExamInPerson/Get_SubExamList?ExamID=" + ExamID,
                dataType: 'json',
                type: 'post',
                success: function (data) {
                    $("#SubExam").empty();
                    $.each(data, function (index, row) {
                        $("#SubExam").append("<option value='" + row.id + "'>" + row.text + "</option>")
                    });
                }
            })
        });

        $("#Exam").ready(function () {
            var ExamID = document.getElementById("Exam").value;

            $.ajax({
                url: "/ExamInPerson/Get_SubExamList?ExamID=" + ExamID,
                dataType: 'json',
                type: 'post',
                success: function (data) {
                    $("#SubExam").empty();
                    $.each(data, function (index, row) {
                        $("#SubExam").append("<option value='" + row.id + "'>" + row.text + "</option>")
                    });
                }
            })
        });

    </script>

    <script src="~/Scripts/Plugins/jQuery.MdBootstrapPersianDateTimePicker/jalaali.js"></script>
    <script src="~/Scripts/Plugins/jQuery.MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePicker.js"></script>

    <script>
        $(document).ready(function () {
            $("#Date td[data-name=today]").click();
        });
    </script>

    <script>
        $(function () {
            $("input[type='hidden']:eq(2)").remove();
        });
    </script>

}
